version: "3.9"

services:
  db:
    image: postgres:16-alpine
    container_name: pan-metrics-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports:
      - "5432:5432"         # optional for local psql/GUI
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TZ: ${TZ}
    depends_on:
      db:
        condition: service_healthy

  collector:
    build:
      context: .
      dockerfile: Dockerfile.collector
    environment:
      DATABASE_URL: ${DATABASE_URL}
      TZ: ${TZ}
      COLLECT_INTERVAL: 3600
    volumes:
      - data:/data
      - ./collector/config.yaml:/app/config.yaml:ro  
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    environment:
      VITE_API_BASE: ${VITE_API_BASE}
    depends_on:
      - api
    ports:
      - "8080:80"
    # nginx.conf in your web image should already proxy /api â†’ api:8000

volumes:
  data:
  pgdata:
